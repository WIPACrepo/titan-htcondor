#!/bin/bash
set -o errexit
set -o nounset
pool=$(readlink -f $1)
driver_script=$(readlink -f $2)
libexec=$(readlink -f $3)
condor_container=$(readlink -f $4)

set +o nounset
if [ -z "$PBS_NUM_NODES" ]; then
	PBS_NUM_NODES=0
fi
set -o nounset

module load singularity

mkdir -p $pool
cd $pool # o/w aprun may fail
test -f $pool/pool_is_ready && rm $pool/pool_is_ready
test -f $pool/pool_kill && rm $pool/pool_kill
test -f $pool/pool_nodes && rm $pool/pool_nodes

if ((PBS_NUM_NODES == 0)); then
	singularity exec --pid $condor_container \
				$libexec/init-cm-node.sh $pool STARTD &
elif ((PBS_NUM_NODES == 1)); then
	singularity exec --pid $condor_container \
				$libexec/init-cm-node.sh $pool &
	aprun singularity exec --pid $condor_container \
				$libexec/init-worker-node.sh $pool &
else
	aprun -n 1 -d 16 \
		singularity exec --pid $condor_container \
				$libexec/init-cm-node.sh $pool STARTD &
	aprun -n $((PBS_NUM_NODES - 1)) -d 16 \
		singularity exec --pid $condor_container \
				$libexec/init-worker-node.sh $pool &
fi

while ! test -f "$pool/pool_is_ready"; do
	echo Waiting for $pool/pool_is_ready
	sleep 5
done

ssh -p 2222 $(<$pool/cm_addr) $driver_script
ssh -p 2222 $(<$pool/cm_addr) $libexec/pool-shutdown-agent.sh $pool &

while ! test -f "$pool/pool_kill"; do
	sleep 10
done

# vim:ft=sh
